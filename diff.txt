diff --git a/gbd/main.R b/gbd/main.R
index f567caa..42866b9 100644
--- a/gbd/main.R
+++ b/gbd/main.R
@@ -1,50 +1,65 @@
-## Tahvi Frank
-## tahvif@uw.edu/tahvif@gmail.com
-### Setup
-rm(list=ls())
+##Set up --------------------------- 
+## Script name: main.R
+## Purpose of script: Run the EPPASM model
+##
+## Author: Maggie Walters
+## Date Created: 2018-04-11
+## Email: mwalte10@uw.edu
+## 
+##
+## Notes: Created by Tahvi Frank and modified for GBD20 by Maggie Walters
+## Some arguments are likely to stay constant across runs, others we're more likely to test different options.
+## The arguments that are more likely to vary are pulled from the eppasm run table
+##
+
+## Used in basically every script
 Sys.umask(mode = "0002")
 windows <- Sys.info()[1][["sysname"]]=="Windows"
 root <- ifelse(windows,"J:/","/home/j/")
 user <- ifelse(windows, Sys.getenv("USERNAME"), Sys.getenv("USER"))
-code.dir <- paste0(ifelse(windows, "H:", paste0("/ihme/homes/", user)), "/gbdeppaiml/")
-gbdyear <- 'gbd20'
-## Packages
-library(data.table); library(mvtnorm); library(survey); library(ggplot2); library(plyr); library(dplyr)
 
-## Arguments
+
+# Arguments ---------------------------------------
 args <- commandArgs(trailingOnly = TRUE)
 print(args)
-if(length(args) > 0) {
+if(length(args) == 0){
+  array.job = FALSE
+  run.name <- "210415_zanfona"
+  loc <- 'BEN'
+  stop.year <- 2022
+  j <- 1
+  paediatric <- FALSE
+}else{
   run.name <- args[1]
-  loc <- args[2]
-  stop.year <- as.integer(args[3])
+  array.job <- as.logical(args[2])
+}
+
+if(!array.job & length(args) > 0){
+  loc <- args[3]
+  stop.year <- as.integer(args[4])
   j <- as.integer(Sys.getenv("SGE_TASK_ID"))
-  paediatric <- as.logical(args[4])
-} else {
-	run.name <- '2020_ind_test_agg2'
-	loc <- 'IND_4842'
-	#loc <- 'ERI'
-	stop.year <- 2022
-	j <- 1
-	paediatric <- TRUE
+  paediatric <- as.logical(args[5])
 }
 
-run.table <- fread(paste0('/share/hiv/epp_input/gbd20//eppasm_run_table.csv'))
-c.args <- run.table[run_name==run.name]
+eppasm_dir <- paste0(ifelse(windows, "H:", paste0("/ihme/homes/", user)), "/eppasm/")
+setwd(eppasm_dir)
+devtools::load_all()
+gbdeppaiml_dir <- paste0(ifelse(windows, "H:", paste0("/ihme/homes/", user)), "/gbdeppaiml/")
+setwd(gbdeppaiml_dir)
+devtools::load_all()
 
+gbdyear <- 'gbd20'
+stop.year = 2022
+
+run.table <- fread(paste0('/share/hiv/epp_input/gbd20//eppasm_run_table.csv'))
+in_run_table = F
+if(in_run_table){
+  c.args <- run.table[run_name==run.name]
+}else{
+  #use the GBD20 final run toggles if the run isn't in the run table
+  c.args <- run.table[run_name=='200713_yuka']
+}
 
-### Arguments
-## Some arguments are likely to stay constant across runs, others we're more likely to test different options.
-## The arguments that are more likely to vary are pulled from the eppasm run table
-start.year <- 1970
-trans.params.sub <- TRUE
-pop.sub <- TRUE
-art.sub <- TRUE
-prev.sub <- TRUE
-sexincrr.sub <- TRUE
-plot.draw <- FALSE
-anc.prior.sub <- TRUE
-lbd.anc <- T
 geoadjust <- c.args[['geoadjust']]
 anc.sub <- c.args[['anc_sub']]
 anc.backcast <- c.args[['anc_backcast']]
@@ -54,426 +69,170 @@ anc.rt <- c.args[['anc_rt']]
 epp.mod <- c.args[['epp_mod']]
 geoadjust <- c.args[['anc_sub']]
 no_anc <- c.args[['no_anc']]
-anc.prior.sub <- TRUE
-
-
-### Paths
-out.dir <- paste0('/ihme/hiv/epp_output/',gbdyear,'/', run.name, "/", loc)
-
-### Functions
-library(mortdb, lib = "/share/mortality/shared/r/")
-setwd(paste0(ifelse(windows, "H:", paste0("/ihme/homes/", user)), "/eppasm/"))
-devtools::load_all()
-setwd(code.dir)
-devtools::load_all()
-loc.table <- get_locations(hiv_metadata = TRUE)
-
-
-
-
-
-### Tables
-
-
-
-# These locations do not have information from LBD team estimates
-# ZAF ANC data are considered nationally representative so no GeoADjust - this could be challenged in the future
-no_geo_adj <-  c(loc.table[epp ==1 & grepl("IND",ihme_loc_id),ihme_loc_id],
-                 "PNG","HTI","DOM", 'CPV', loc.table[epp ==1 & grepl("ZAF",ihme_loc_id),ihme_loc_id], 'STP', 'KEN_35626', 'MRT', 'COM')
-
-
+start.year <- c.args[['start.year']]
+trans.params.sub <- c.args[['trans.params.sub']]
+pop.sub <- c.args[['pop.sub']]
+art.sub <- c.args[['art.sub']]
+prev_sub <- c.args[['prev_sub']]
+sexincrr.sub <- c.args[['sexincrr.sub']]
+plot.draw <- c.args[['plot.draw']]
+anc.prior.sub <- c.args[['anc.prior.sub']]
+test <- c.args[['test']]
+anc.prior.sub <- c.args[['anc.prior.sub']]
+prev_sub <- c.args[['prev_sub']]
+sexincrr.sub <- c.args[['sexincrr.sub']]
 
+lbd.anc <- T
+ped_toggle = TRUE
+paediatric = TRUE
+
+# Array job ---------------------------------------
+if(array.job){
+  array.dt <- fread(paste0('/ihme/hiv/epp_input/gbd20/',run.name,'/array_table.csv'))
+  task_id <- as.integer(Sys.getenv("SGE_TASK_ID"))
+  j <- array.dt[task_id,draws]
+  file_name <- array.dt[task_id,loc_scalar]
+  combo_num <- array.dt[task_id,combo]
+  loc <- array.dt[task_id,ihme_loc_id]
+  pred.mat <- readRDS('/ihme/homes/mwalte10/hiv_gbd2019/requests/haidong_proj/maggie/pref_mat.RDS')
+  foi_scalar <- unique(pred.mat[ihme_loc_id == loc & combo == combo_num])[,.(year_id, scalar)]
+}else{
+  file_name <- loc
+  foi_scalar = 1
+}
+
+out.dir <- paste0('/ihme/hiv/epp_output/',gbdyear,'/', run.name, "/", file_name)
+
+source('/ihme/homes/mwalte10/gbdeppaiml/gbd/data_prep.R')
+# Location specific toggles ---------------------------------------
 # ANC data bias adjustment
-if(geoadjust & !loc %in% no_geo_adj){
+##### These locations do not have information from LBD team estimates
+##### ZAF ANC data are considered nationally representative so no GeoADjust - this could be challenged in the future
+no_geo_adj <-  c(loc.table[epp ==1 & grepl("IND",ihme_loc_id),ihme_loc_id],
+                 "PNG","HTI","DOM", 'CPV', loc.table[epp ==1 & grepl("ZAF",ihme_loc_id),ihme_loc_id], 
+                 'STP', 'KEN_35626', 'MRT', 'COM')
+if(geoadjust & !loc %in% no_geo_adj | loc %in% c('ZWE', 'MWI')){
   geoadjust  <- TRUE
 } else {
   geoadjust  <- FALSE
 }
+print(paste0(loc, ' geoadjust set to ', geoadjust))
 
-if(!loc %in% unlist(strsplit(list.files('/share/hiv/data/PJNZ_EPPASM_prepped_subpop/lbd_anc/2019/'), '.rds'))){
+# LBD Adjustments
+##### Location that don't undergo LBD adjustment, set to TRUE as a default above
+if(!loc %in% unlist(strsplit(list.files('/share/hiv/data/PJNZ_EPPASM_prepped_subpop/lbd_anc/2019/'), '.rds')) | loc %in% c('ZAF', 'PNG') | grepl('IND', loc)){
   lbd.anc <- FALSE
 }
-
-if(grepl('ZAF', loc)){
-  lbd.anc <- FALSE
-}
-if(grepl('PNG', loc)){
-  lbd.anc <- FALSE
+if(grepl('ancrt', run.name)){
+  lbd.anc = F
 }
 
-prev_sub <- TRUE
+print(paste0(loc, ' lbd.anc set to ', lbd.anc))
 
-sexincrr.sub <- TRUE
 
-##Need to figure out where to get these
+# No Sex incrr substitution
 if(loc %in% c("MAR","MRT","COM")){
   sexincrr.sub <- FALSE
 }
-# if(loc == "STP"){
-#   prev_sub <- FALSE
-# }
-### Code
-## Read in spectrum object, sub in GBD parameters
-
-dt <- read_spec_object(loc, j, start.year, stop.year, trans.params.sub, 
-                       pop.sub, anc.sub, anc.backcast, prev.sub = prev_sub, art.sub = TRUE, 
-                       sexincrr.sub = sexincrr.sub,  age.prev = age.prev, paediatric = TRUE, 
-                       anc.prior.sub = TRUE, lbd.anc = lbd.anc, 
-                       geoadjust = geoadjust, use_2019 = TRUE)
-
-#source(paste0('/ihme/homes/mwalte10/data_post_processing.R'))
-if(loc == 'IND_4842'){
-  sub_in <- readRDS('/ihme/hiv/epp_output/gbd20/200213_violin/dt_objects/IND_4862_dt.RDS')
-  sub_in <- attr(sub_in, 'specfp')$paedsurv_artcd4dist
-  attr(dt, 'specfp')$paedsurv_artcd4dist <- sub_in
-}
-
-if(any(attr(dt, 'eppd')$ancsitedat$prev > 1)){
-  print('A prevalence above 1 was removed')
-  attr(dt, 'eppd')$ancsitedat <- as.data.frame(as.data.table(attr(dt, 'eppd')$ancsitedat)[prev < 1,])
-}
 
-##Remove NA rows on ANCRT cens that are casuing issues
-if(loc=="NGA_25343"){
-  attr(dt,"eppd")$ancrtcens <- attr(dt,"eppd")$ancrtcens[1:2,] 
-  
-}
 
-if(grepl('ETH', loc)){
-  attr(dt, 'eppd')$hhs <-  subset(attr(dt, 'eppd')$hhs, year != '2018')
-}
-#check_inputs(dt)
-if(geoadjust){
-  attr(dt, 'eppd')$ancsitedat$offset <- attr(dt, 'eppd')$ancsitedat$offset %>% as.numeric()
-  
-}
-if(!geoadjust & any(colnames(data.table(attr(dt, 'eppd')$ancsitedat)) == 'year_id')){
-  temp <- data.table(attr(dt, 'eppd')$ancsitedat)
-  setnames(temp, 'year_id', 'year')
-  temp <- temp[,ihme_loc_id := NULL]
-  temp <- temp[,high_risk := NULL]
-  attr(dt, 'eppd')$ancsitedat <- data.frame(temp)
-}
-
-dir.create(paste0('/ihme/hiv/epp_output/', gbdyear, "/", run.name, '/dt_objects/'), recursive = T)
-saveRDS(dt, file = paste0('/ihme/hiv/epp_output/', gbdyear, "/", run.name, '/dt_objects/', loc, '_dt.RDS' ))
-if(epp.mod == 'rspline'){attr(dt, 'specfp')$equil.rprior <- TRUE}
-# 
-# #Some substitutions to get things running
-if(grepl('NGA', loc)){
-  temp <- attr(dt, 'specfp')$paedsurv_artcd4dist
-  temp[temp < 0] <- 0
-  attr(dt, 'specfp')$paedsurv_artcd4dist <- temp
-}
-
-
-
-## Replace on-ART mortality RR for TZA and UGA
-if(loc %in% c('UGA', 'TZA')){
-  temp <- readRDS(paste0('/share/hiv/data/PJNZ_EPPASM_prepped_subpop/MWI.rds'))
-  temp.artmxrr <- attr(temp, 'specfp')$artmx_timerr
-  attr(dt, 'specfp')$artmx_timerr <- temp.artmxrr
-}
-
-if(run.name %in% c("190630_fixonARTIND","190630_fixonARTIND_tightprior")){
-  temp <- readRDS(paste0('/share/hiv/data/PJNZ_EPPASM_prepped_subpop/MWI.rds'))
-  temp.artmxrr <- attr(temp, 'specfp')$artmx_timerr
-  attr(dt, 'specfp')$artmx_timerr <- temp.artmxrr
-}
-
-attr(dt, 'eppd')$ancsitedat = unique(attr(dt, 'eppd')$ancsitedat)
-## TODO - fix se = 0 data points in ZAF
-attr(dt, 'eppd')$hhs <- attr(dt, 'eppd')$hhs[!attr(dt, 'eppd')$hhs$se == 0,]
-# if(loc == 'GNQ'){
-#   attr(dt, 'eppd')$hhs <- subset(attr(dt, 'eppd')$hhs, sex == 'both')
-#   
+# Prepare the dt object ---------------------------------------
+dt <- read_spec_object(loc, j, start.year, stop.year, trans.params.sub,
+                       pop.sub, anc.sub,  prev.sub = prev_sub, art.sub = TRUE,
+                       sexincrr.sub = sexincrr.sub,  age.prev = age.prev, paediatric = TRUE,
+                       anc.prior.sub = TRUE, lbd.anc = lbd.anc,
+                       geoadjust = geoadjust, use_2019 = TRUE,
+                       test.sub_prev_granular = test,
+                       anc.rt = TRUE
+                       # anc.backcast,
+                       )
+###Switched to a binomial model, so we can now handle observations of zero
+mod <- data.table(attr(dt, 'eppd')$hhs)[prev == 0.0005,se := 0]
+mod[prev == 0.0005, prev := 0]
+attr(dt, 'eppd')$hhs <- data.frame(mod)
+
+###Extends inputs to the projection year as well as does some site specific changes. This should probably be examined by cycle
+dt <- modify_dt(dt)
+# if(loc == 'CAF'){
+#   print('outliering some ancrt points')
+#   dat <- data.table(attr(dt, 'eppd')$ancsitedat)
+#   dat <- dat[!(site %in% c('Mambélé', "N'Gaoundaye", "Gobongo") & type == 'ancrt')]
+#   attr(dt, 'eppd')$ancsitedat <- as.data.frame(dat)
+# }
+# if(loc == 'CMR'){
+#   print('outliering some ancrt points')
+#   dat <- data.table(attr(dt, 'eppd')$ancsitedat)
+#   dat <- dat[!(site %in% c("Fondation Chantal Biya") & type == 'ancrt' & prev > 0.2)]
+#   attr(dt, 'eppd')$ancsitedat <- as.data.frame(dat)
 # }
 
-attr(dt, 'specfp')$relinfectART <- 0.3
-
-if(grepl("IND",loc)){
-  if(no_anc){
-    attr(dt,"eppd")$ancsitedat <- NULL
-  }
-  attr(dt, 'specfp')$art_alloc_mxweight <- 0.5
-}
-
-if(loc %in% "STP"){
-  attr(dt, 'eppd')$ancsitedat <- attr(dt, 'eppd')$ancsitedat[attr(dt, 'eppd')$ancsitedat$subpop=="Pop Fem_restante",] 
-  attr(dt, 'eppd')$ancsitedat = unique(attr(dt, 'eppd')$ancsitedat)
-  attr(dt, 'specfp')$art_alloc_mxweight <- 0.5
-  
-}
-
-if(loc %in% "COM"){
-  attr(dt, 'eppd')$ancsitedat <- attr(dt, 'eppd')$ancsitedat[attr(dt, 'eppd')$ancsitedat$subpop=="Female Population",] 
-  attr(dt, 'eppd')$ancsitedat = unique(attr(dt, 'eppd')$ancsitedat)
-  attr(dt, 'specfp')$art_alloc_mxweight <- 0.5
-  
-}
-
-if(loc %in% "MRT"){
-  attr(dt, 'eppd')$ancsitedat <- attr(dt, 'eppd')$ancsitedat[attr(dt, 'eppd')$ancsitedat$subpop=="Pop féminine restante",] 
-  attr(dt, 'eppd')$ancsitedat = unique(attr(dt, 'eppd')$ancsitedat)
-  attr(dt, 'specfp')$art_alloc_mxweight <- 0.5
-  
-}
-
-
-# ######extend pmtct_dropout to 2022, and fill any missing years
-if(max(attr(dt, 'specfp')$pmtct_dropout$year) < stop.year){
-  add_on.year <- seq(max(attr(dt, 'specfp')$pmtct_dropout$year) + 1 , stop.year)
-  add_on.dropouts <- attr(dt, 'specfp')$pmtct_dropout[attr(dt, 'specfp')$pmtct_dropout$year == max(attr(dt, 'specfp')$pmtct_dropout$year), 2:ncol(attr(dt, 'specfp')$pmtct_dropout)]
-  attr(dt, 'specfp')$pmtct_dropout <- rbind(attr(dt, 'specfp')$pmtct_dropout, c(year = unlist(add_on.year), add_on.dropouts))
-}
-if(length(unique(attr(dt, 'specfp')$pmtct_dropout$year)) < attr(dt, 'specfp')$SIM_YEARS){
-  missing_years <- setdiff(seq(start.year, stop.year), attr(dt, 'specfp')$pmtct_dropout$year)
-  temp.dt <- data.table( attr(dt, 'specfp')$pmtct_dropout)
-  extend_back <- temp.dt[year == min(year),]
-  list <- list()
-  for(years in missing_years){
-    x <- data.table(extend_back)
-    list[[years - min(missing_years) + 1]] <- x[,year := years]
-  }
-  extend_back <- do.call(rbind, list)
-  extend_back <- data.table(extend_back)
-  extend_back[,year := missing_years]
-  new <- rbind(attr(dt, 'specfp')$pmtct_dropout, extend_back)
-  new <- new[order(year),]
-  new <- as.data.frame(new)
-  attr(dt, 'specfp')$pmtct_dropout <- new
-}
-
-if(dim(attr(dt, 'specfp')$artmx_timerr)[2] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim(attr(dt, 'specfp')$artmx_timerr)[2] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$artmx_timerr <-  abind::abind(attr(dt, 'specfp')$artmx_timerr, attr(dt, 'specfp')$artmx_timerr[,ncol(attr(dt, 'specfp')$artmx_timerr) ])
-    diff <- dim(attr(dt, 'specfp')$artmx_timerr)[2] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(dim( attr(dt, 'specfp')$art15plus_isperc)[2] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim( attr(dt, 'specfp')$art15plus_isperc)[2] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$art15plus_isperc <-  abind::abind( attr(dt, 'specfp')$art15plus_isperc,  attr(dt, 'specfp')$art15plus_isperc[,ncol( attr(dt, 'specfp')$art15plus_isperc)])
-    diff <- dim( attr(dt, 'specfp')$art15plus_isperc)[2] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(length( attr(dt, 'specfp')$specpop_percelig) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$specpop_percelig)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$specpop_percelig <-  abind::abind(  attr(dt, 'specfp')$specpop_percelig,  (attr(dt, 'specfp')$specpop_percelig)[length( attr(dt, 'specfp')$specpop_percelig)])
-    diff <- length( attr(dt, 'specfp')$specpop_percelig) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(length( attr(dt, 'specfp')$pw_artelig) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$pw_artelig)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$pw_artelig<-  abind::abind(  attr(dt, 'specfp')$pw_artelig,  (attr(dt, 'specfp')$pw_artelig)[length( attr(dt, 'specfp')$pw_artelig)])
-    diff <- length( attr(dt, 'specfp')$pw_artelig) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(length( attr(dt, 'specfp')$art_dropout) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$art_dropout)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$art_dropout<-  abind::abind(  attr(dt, 'specfp')$art_dropout,  (attr(dt, 'specfp')$art_dropout)[length( attr(dt, 'specfp')$art_dropout)])
-    diff <- length( attr(dt, 'specfp')$art_dropout) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(dim( attr(dt, 'specfp')$paedsurv_cd4dist)[3] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim( attr(dt, 'specfp')$paedsurv_cd4dist)[3] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$paedsurv_cd4dist <-  abind::abind( attr(dt, 'specfp')$paedsurv_cd4dist,  attr(dt, 'specfp')$paedsurv_cd4dist[,,dim( attr(dt, 'specfp')$paedsurv_cd4dist)[3]])
-    diff <- dim( attr(dt, 'specfp')$paedsurv_cd4dist)[3] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(dim( attr(dt, 'specfp')$incrr_age)[3] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim( attr(dt, 'specfp')$incrr_age)[3] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$incrr_age <-  abind::abind( attr(dt, 'specfp')$incrr_age,  attr(dt, 'specfp')$incrr_age[,,dim( attr(dt, 'specfp')$incrr_age)[3]])
-    diff <- dim( attr(dt, 'specfp')$incrr_age)[3] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(dim( attr(dt, 'specfp')$paedsurv_artcd4dist)[4] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim( attr(dt, 'specfp')$paedsurv_artcd4dist)[4] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$paedsurv_artcd4dist <-  abind::abind( attr(dt, 'specfp')$paedsurv_artcd4dist,  attr(dt, 'specfp')$paedsurv_artcd4dist[,,,dim( attr(dt, 'specfp')$paedsurv_artcd4dist)[4]])
-    diff <- dim( attr(dt, 'specfp')$paedsurv_artcd4dist)[4] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-
-if(dim( attr(dt, 'specfp')$art15plus_num)[2] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim( attr(dt, 'specfp')$art15plus_num)[2] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$art15plus_num <-  abind::abind( attr(dt, 'specfp')$art15plus_num,  attr(dt, 'specfp')$art15plus_num[,ncol( attr(dt, 'specfp')$art15plus_num) - 1])
-    diff <- dim( attr(dt, 'specfp')$art15plus_num)[2] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(length( attr(dt, 'specfp')$median_cd4init) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$median_cd4init)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$median_cd4init<-  abind::abind(  attr(dt, 'specfp')$median_cd4init,  (attr(dt, 'specfp')$median_cd4init)[length( attr(dt, 'specfp')$median_cd4init)])
-    diff <- length( attr(dt, 'specfp')$median_cd4init) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(length( attr(dt, 'specfp')$med_cd4init_input) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$med_cd4init_input)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$med_cd4init_input<-  abind::abind(  attr(dt, 'specfp')$med_cd4init_input,  (attr(dt, 'specfp')$med_cd4init_input)[length( attr(dt, 'specfp')$med_cd4init_input)])
-    diff <- length( attr(dt, 'specfp')$med_cd4init_input) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(length( attr(dt, 'specfp')$med_cd4init_cat) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$med_cd4init_cat)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$med_cd4init_cat<-  abind::abind(  attr(dt, 'specfp')$med_cd4init_cat,  (attr(dt, 'specfp')$med_cd4init_cat)[length( attr(dt, 'specfp')$med_cd4init_cat)])
-    diff <- length( attr(dt, 'specfp')$med_cd4init_cat) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-if(length( attr(dt, 'specfp')$verttrans_lag) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$verttrans_lag)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$verttrans_lag<-  abind::abind(  attr(dt, 'specfp')$verttrans_lag,  (attr(dt, 'specfp')$verttrans_lag)[length( attr(dt, 'specfp')$verttrans_lag)])
-    diff <- length( attr(dt, 'specfp')$verttrans_lag) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
-
-if(length( attr(dt, 'specfp')$paedsurv_lag) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$paedsurv_lag)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$paedsurv_lag<-  abind::abind(  attr(dt, 'specfp')$paedsurv_lag,  (attr(dt, 'specfp')$paedsurv_lag)[length( attr(dt, 'specfp')$paedsurv_lag)])
-    diff <- length( attr(dt, 'specfp')$paedsurv_lag) - attr(dt, 'specfp')$SIM_YEARS
-    
+###Replacement of a few priors
+attr(dt, 'specfp')$art_alloc_mxweight <- 0.5
+sub.anc.prior <- function(dt,loc){
+  if(loc %in%  c("SDN","SSD","SOM","GNB","MDG","PNG", "COM")){
+    ancbias.pr.mean <<- 0.15
+    ancbias.pr.sd <<- 0.001
+  }else if(loc %in% "MRT"){
+    ancbias.pr.mean <<- 0.15
+    ancbias.pr.sd <<- 0.001
+  } else {
+    ancbias.pr.mean <<- 0.15
+    ancbias.pr.sd <<- 1
   }
+  return(dt)
 }
+dt <- sub.anc.prior(dt, loc)
 
-if(length( attr(dt, 'specfp')$artcd4elig_idx) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- length( attr(dt, 'specfp')$artcd4elig_idx)- attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$artcd4elig_idx<-  abind::abind(  attr(dt, 'specfp')$artcd4elig_idx,  (attr(dt, 'specfp')$artcd4elig_idx)[length( attr(dt, 'specfp')$artcd4elig_idx)])
-    diff <- length( attr(dt, 'specfp')$artcd4elig_idx) - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
+###Get the locations that should be run with the binomial likelihood
+# zero_prev_locs <- fread(prev_surveys)
+zero_prev_locs <- fread("/ihme/hiv/epp_input/gbd20/prev_surveys.csv")
+zero_prev_locs <- unique(zero_prev_locs[prev == 0.0005 & use == TRUE,iso3])
 
-if(dim( attr(dt, 'specfp')$entrantprev)[2] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim( attr(dt, 'specfp')$entrantprev)[2] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$entrantprev <-  abind::abind( attr(dt, 'specfp')$entrantprev,  attr(dt, 'specfp')$entrantprev[,ncol( attr(dt, 'specfp')$entrantprev) - 1])
-    diff <- dim( attr(dt, 'specfp')$entrantprev)[2] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
+# Fit model ---------------------------------------
+# dt <- readRDS(paste0('/ihme/hiv/epp_output/gbd20/200713_yuka/dt_objects/',loc,'_dt.RDS'))
+# attr(dt,"eppd")$ancsitedat <- as.data.frame(attr(dt,"eppd")$ancsitedat)
 
-if(dim( attr(dt, 'specfp')$entrantartcov)[2] < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- dim( attr(dt, 'specfp')$entrantartcov)[2] - attr(dt, 'specfp')$SIM_YEARS
-  while(diff != 0){
-    attr(dt, 'specfp')$entrantartcov <-  abind::abind( attr(dt, 'specfp')$entrantartcov,  attr(dt, 'specfp')$entrantartcov[,ncol( attr(dt, 'specfp')$entrantartcov) - 1])
-    diff <- dim( attr(dt, 'specfp')$entrantartcov)[2] - attr(dt, 'specfp')$SIM_YEARS
-    
-  }
-}
+fit <- eppasm::fitmod(dt, eppmod = ifelse(grepl('IND', loc),'rlogistic',epp.mod), 
+                      B0 = 1e5, B = 1e3, number_k = 500, 
+                      ageprev = ifelse(loc %in% zero_prev_locs,'binom','probit'))
+dir.create(paste0('/ihme/hiv/epp_output/gbd20/', run.name, '/fitmod/'))
+saveRDS(fit, file = paste0('/ihme/hiv/epp_output/gbd20/', run.name, '/fitmod/', loc, '_', j, '.RDS'))
 
-if(length(attr(dt, 'specfp')$artpaed_isperc) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- attr(dt, 'specfp')$SIM_YEARS - length(attr(dt, 'specfp')$artpaed_isperc)
-  add_names <- setdiff(seq(start.year, stop.year), as.numeric(names(attr(dt, 'specfp')$artpaed_isperc)))
-  add <- rep(FALSE, length(add_names))
-  names(add) <- add_names
-  new <- c(attr(dt, 'specfp')$artpaed_isperc, add)
-  new <- new[order(names(new))]
-  attr(dt, 'specfp')$artpaed_isperc <-  new
-  
-  
-}
-
-if(length(attr(dt, 'specfp')$artpaed_num) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- attr(dt, 'specfp')$SIM_YEARS - length(attr(dt, 'specfp')$artpaed_num)
-  add_names <- setdiff(seq(start.year, stop.year), as.numeric(names(attr(dt, 'specfp')$artpaed_num)))
-  add <- rep(0, length(add_names))
-  names(add) <- add_names
-  new <- c(attr(dt, 'specfp')$artpaed_num, add)
-  new <- new[order(names(new))]
-  attr(dt, 'specfp')$artpaed_num <-  new
-  
-  
-}
-
-if(length(attr(dt, 'specfp')$cotrim_isperc) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- attr(dt, 'specfp')$SIM_YEARS - length(attr(dt, 'specfp')$cotrim_isperc)
-  add_names <- setdiff(seq(start.year, stop.year), as.numeric(names(attr(dt, 'specfp')$cotrim_isperc)))
-  add <- rep(FALSE, length(add_names))
-  names(add) <- add_names
-  new <- c(attr(dt, 'specfp')$cotrim_isperc, add)
-  new <- new[order(names(new))]
-  attr(dt, 'specfp')$cotrim_isperc <-  new
-  
-  
-}
-
-if(length(attr(dt, 'specfp')$cotrim_num) < attr(dt, 'specfp')$SIM_YEARS){
-  diff <- attr(dt, 'specfp')$SIM_YEARS - length(attr(dt, 'specfp')$cotrim_num)
-  add_names <- setdiff(seq(start.year, stop.year), as.numeric(names(attr(dt, 'specfp')$cotrim_num)))
-  add <- rep(0, length(add_names))
-  names(add) <- add_names
-  new <- c(attr(dt, 'specfp')$cotrim_num, add)
-  new <- new[order(names(new))]
-  attr(dt, 'specfp')$cotrim_num <-  new
-  
-  
-}
-
-if(any(colnames(attr(dt, 'eppd')) == 'year_id')){
-  x <- as.data.table(attr(dt, 'eppd')$ancsitedat)
-  x <- setnames(x, 'year_id', 'year')
-  attr(dt, 'eppd')$ancsitedat <-  as.data.frame(x)
-}
-if(grepl('IND', loc)){
- x <- attr(dt, 'specfp')$birthslag
- x[,53] <- x[,52]
- attr(dt, 'specfp')$birthslag <- x
-}
-
-## Fit model
-
-fit <- eppasm::fitmod(dt, eppmod = epp.mod, B0 = 1e5, B = 1e3, number_k = 500)
-data.path <- paste0('/share/hiv/epp_input/', gbdyear, '/', run.name, '/fit_data/', loc, '.csv')
-if(!file.exists(data.path)){save_data(loc, attr(dt, 'eppd'), run.name)}
-if(file.exists(data.path)){save_data(loc, attr(dt, 'eppd'), run.name)}
 
+dir.create(paste0('/ihme/hiv/epp_output/gbd20/', run.name, '/inc_rate/'))
+dir.create(paste0('/ihme/hiv/epp_output/gbd20/', run.name, '/prev_rate/'))
+data.path <- paste0('/share/hiv/epp_input/', gbdyear, '/', run.name, '/fit_data/', loc,'.csv')
 
 
 ## When fitting, the random-walk based models only simulate through the end of the
 ## data period. The `extend_projection()` function extends the random walk for r(t)
 ## through the end of the projection period.
+
 if(epp.mod == 'rhybrid'){
   fit <- extend_projection(fit, proj_years = stop.year - start.year + 1)
 }
 
-if(max(fit$fp$pmtct_dropout$year) < stop.year){
+if(max(fit$fp$pmtct_dropout$year) < stop.year & ped_toggle){
   add_on.year <- seq(max(fit$fp$pmtct_dropout$year) + 1 , stop.year)
   add_on.dropouts <- fit$fp$pmtct_dropout[fit$fp$pmtct_dropout$year == max(fit$fp$pmtct_dropout$year), 2:ncol(fit$fp$pmtct_dropout)]
   fit$fp$pmtct_dropout <- rbind(fit$fp$pmtct_dropout, c(year = unlist(add_on.year), add_on.dropouts))
 }
 
-##NOTE: need to get GBD simmod working again - error on BF transmissions - otherwise PAEDIATRIC must be false
-#debugonce(gbd_sim_mod)
-result <- gbd_sim_mod(fit, VERSION = "R")
 
+
+draw <- j
+result <- gbd_sim_mod(fit, VERSION = "R")
+# dir.create(paste0('/ihme/hiv/epp_output/', gbdyear, '/', run.name, '/fit/', loc, '/'), recursive = T)
+# saveRDS(result, paste0('/ihme/hiv/epp_output/', gbdyear, '/', run.name, '/fit/', loc, '/', draw, '.RDS'))
+
+dir.create(paste0('/ihme/hiv/epp_output/', gbdyear, '/', run.name, '/fit/', file_name, '/'), recursive = T)
+saveRDS(result, paste0('/ihme/hiv/epp_output/', gbdyear, '/', run.name, '/fit/', file_name, '/', draw, '.RDS'))
+#
+# #results
+# ##track the output of the prev and inc through get_gbd_outputs
 output.dt <- get_gbd_outputs(result, attr(dt, 'specfp'), paediatric = paediatric)
 output.dt[,run_num := j]
-## Write output to csv
+out.dir <- paste0('/ihme/hiv/epp_output/gbd20/', run.name, '/', file_name, '/')
 dir.create(out.dir, showWarnings = FALSE)
 write.csv(output.dt, paste0(out.dir, '/', j, '.csv'), row.names = F)
 
@@ -489,4 +248,11 @@ write.csv(param, paste0(out.dir,'/theta_', j, '.csv'), row.names = F)
 if(plot.draw){
   plot_15to49_draw(loc, output.dt, attr(dt, 'eppd'), run.name)
 }
+params <- fnCreateParam(theta = unlist(param), fp = fit$fp)
+saveRDS(params, paste0('/ihme/hiv/epp_output/', gbdyear, '/', run.name, '/fit/', file_name, '.RDS'))
+
+
+data.path <- paste0('/share/hiv/epp_input/', gbdyear, '/', run.name, '/fit_data/', loc,'.csv')
+save_data(loc, attr(dt, 'eppd'), run.name)
+
 
